datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}
model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  userId    String    @unique
  username  String
  email     String    @unique
  Vehicles  Vehicle[]
  Customers  Customer[]
  Contracts  Contract[]
}

model Vehicle {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  user                User?   @relation(fields: [userId], references: [userId])
  userId              String?
  plateNumber         String  @unique
  brand               String
  meter               Float
  status              String @default("Available")
  rentalCount         Int?    
  transmission        String @default("Automatic")
  manufactureYear     Float?
  color               String?
  extraHourPrice      Float
  dailyRent           Float
  weeklyRent          Float
  monthlyRent         Float
  insuranceCompany    String?
  registrationType    String?
  fuelType            String
  extraKilometerPrice Float
  vehicleType         String?
  dailyKilometerLimit Float
  Contracts           Contract[]
}
model Customer {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  user                User     @relation(fields: [userId], references: [userId])
  userId              String
  customerName        String       
  category            String
  nationality         String
  idNumber            String
  idExpirationDate    String?
  mobile              String?
  debt                Float
  Contracts           Contract[]
}
model Contract {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  user                User        @relation(fields: [userId], references: [userId])
  userId              String
  plateNumber         String      @unique
  total               Float
  paid                Float
  remainingDues       Float
  meterReadingOut     Float
  meterReadingIn      Float?
  timeOut             String
  dailyRent           Float
  timeIn              String
  dateOut             String
  returnedDate        String
  returnStatus        String?
  earlyReturnFee      String?
  lateReturnFee       String?
  invoiceDetails      String?
  customerId          String        @db.ObjectId
  customer            Customer     @relation(fields: [customerId], references: [id])
  vehicle             Vehicle      @relation(fields: [plateNumber], references: [plateNumber])
}

// model MaFloatenance {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   plateNumber         String
//   maFloatenanceType     String
//   client              String
//   date                String
//   cost                Float
//   description         String?

//   vehicle             Vehicle      @relation(fields: [plateNumber], references: [plateNumber])
//   user                User?        @relation("user_maFloatenances", fields: [userId], references: [userId])
//   userId              String?
// }
// model Invoice {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   user                User?        @relation(fields: [userId], references: [id])
//   userId              String?
//   customerId          String    
//   customer            Customer     @relation(fields: [customerId], references: [id])
//   date                String
//   price               Float
//   debt                Float
//   paid                Float
//   total               Float
//   amount              Float
//   description         String
//   addTax              Boolean
//   contract            Contract?    @relation(fields: [contractId], references: [id])
//   contractId          String?
// }
// model Transaction {
//   id                  String       @id @default(uuid()) @map("_id")
//   transactionId       String
//   operation           String
//   payment             String
//   paymentDate         String
//   amount              Float
//   contract            Contract[]    
//   contractId          String?
//   invoice             Invoice[]     
//   invoiceId           String?
//   maFloatenance         MaFloatenance[] 
//   maFloatenanceId       String?
//   user                User?        
//   userId              String?
// }
